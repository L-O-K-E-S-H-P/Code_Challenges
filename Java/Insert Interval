class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int[][] newIntervals=Arrays.copyOf(intervals,intervals.length+1);
        newIntervals[newIntervals.length-1]=newInterval;
        return merge(newIntervals);
    }
    public int[][] merge(int[][] intervals)
    {
        Arrays.sort(intervals,(a,b)->Integer.compare(a[0],b[0]));
        LinkedList<int[]> merged = new LinkedList<>();
        for(int[] interval:intervals)
        {
            if(merged.isEmpty() || merged.getLast()[1]<interval[0])
            {
                merged.add(interval);
            }
            else
            {
                merged.getLast()[1]=Math.max(merged.getLast()[1],interval[1]);
            }
        }
        return merged.toArray(new int[merged.size()][]);
    }
}
